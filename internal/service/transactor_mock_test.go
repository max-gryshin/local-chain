// Code generated by MockGen. DO NOT EDIT.
// Source: transactor.go

// Package service_test is a generated GoMock package.
package service_test

import (
	types "local-chain/internal/types"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTxPool is a mock of TxPool interface.
type MockTxPool struct {
	ctrl     *gomock.Controller
	recorder *MockTxPoolMockRecorder
}

// MockTxPoolMockRecorder is the mock recorder for MockTxPool.
type MockTxPoolMockRecorder struct {
	mock *MockTxPool
}

// NewMockTxPool creates a new mock instance.
func NewMockTxPool(ctrl *gomock.Controller) *MockTxPool {
	mock := &MockTxPool{ctrl: ctrl}
	mock.recorder = &MockTxPoolMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTxPool) EXPECT() *MockTxPoolMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockTxPool) Get(txHash []byte) *types.Transaction {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", txHash)
	ret0, _ := ret[0].(*types.Transaction)
	return ret0
}

// Get indicates an expected call of Get.
func (mr *MockTxPoolMockRecorder) Get(txHash interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockTxPool)(nil).Get), txHash)
}
